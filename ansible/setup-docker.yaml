# setup-docker.yaml - Multi-OS Compatible Version
---
- name: Prepare Node and Install Docker
  hosts: ec2
  become: true
  gather_facts: yes

  tasks:
    # Update system packages based on OS family
    - name: Update yum or dnf cache (Amazon Linux/RHEL/CentOS)
      ansible.builtin.raw: |
        if command -v dnf >/dev/null 2>&1; then
          dnf makecache
        else
          yum makecache fast
        fi
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Update apt cache (Ubuntu/Debian)
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600
      when: ansible_facts['os_family'] == 'Debian'

    # Install Docker prerequisites for Amazon Linux/RHEL
    - name: Install prerequisite packages for Docker (Amazon Linux/RHEL)
      ansible.builtin.raw: yum install -y yum-utils device-mapper-persistent-data lvm2
      when: ansible_facts['os_family'] == 'RedHat'

    # Install Docker prerequisites for Ubuntu/Debian
    - name: Install prerequisite packages for Docker (Ubuntu/Debian)
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
      when: ansible_facts['os_family'] == 'Debian'

    # Add Docker repository for Amazon Linux/RHEL (skip for Amazon Linux 2)
    - name: Add Docker CE repository (Amazon Linux/RHEL)
      ansible.builtin.yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
        enabled: yes
      when: ansible_facts['os_family'] == 'RedHat' and not (ansible_facts['distribution'] == 'Amazon' and ansible_facts['distribution_major_version'] == '2')

    # Add Docker repository for Ubuntu/Debian
    - name: Add Docker's official GPG key (Ubuntu/Debian)
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
        force: true
      when: ansible_facts['os_family'] == 'Debian'

    - name: Set up the Docker apt repository (Ubuntu/Debian)
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present
        filename: docker
      when: ansible_facts['os_family'] == 'Debian'

    # Remove Docker CE repo if present (Amazon Linux 2)
    - name: Remove Docker CE repo file if present (Amazon Linux 2)
      ansible.builtin.raw: |
        if [ -f /etc/yum.repos.d/docker-ce-stable.repo ]; then
          rm -f /etc/yum.repos.d/docker-ce-stable.repo
        fi
      when: ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution'] == 'Amazon' and ansible_facts['distribution_major_version'] == '2'

    - name: Clean yum metadata (Amazon Linux 2)
      ansible.builtin.raw: yum clean all
      when: ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution'] == 'Amazon' and ansible_facts['distribution_major_version'] == '2'

    # Install Docker Engine for Amazon Linux 2
    - name: Install Docker Engine (Amazon Linux 2)
      ansible.builtin.raw: amazon-linux-extras install -y docker
      when: ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution'] == 'Amazon' and ansible_facts['distribution_major_version'] == '2'

    # Install Docker Engine for other RedHat/CentOS
    - name: Install Docker Engine (Other RedHat/CentOS)
      ansible.builtin.raw: yum install -y docker-ce docker-ce-cli containerd.io
      when: ansible_facts['os_family'] == 'RedHat' and not (ansible_facts['distribution'] == 'Amazon' and ansible_facts['distribution_major_version'] == '2')

    # Install Docker Engine for Ubuntu/Debian
    - name: Install Docker Engine (Ubuntu/Debian)
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == 'Debian'

    # Common Docker service configuration
    - name: Ensure Docker service is running and enabled on boot
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    # Add ec2-user to docker group (Amazon Linux specific)
    - name: Add ec2-user to docker group
      ansible.builtin.user:
        name: ec2-user
        groups: docker
        append: yes
      when: ansible_facts['os_family'] == 'RedHat'
